---
interface SubItem {
  slot: string;
  href: string;
}

interface Props {
  subItems?: SubItem[];
  iconClasses: string;
  href?: string;
}

const isActive = false;
---

{
  Astro.props.subItems ? (
    <li class="treeview">
      <a
        class:list={["app-menu__item", { active: isActive }]}
        href="javascript:"
        data-toggle="treeview"
      >
        <i class:list={["app-menu__icon", Astro.props.iconClasses]} />
        <span class="app-menu__label">
          <slot />
        </span>
        <i class="treeview-indicator bi bi-chevron-right" />
      </a>
      <ul class="treeview-menu">
        {Astro.props.subItems.map(({ slot, href }) => (
          <li>
            <a class="treeview-item" href={href}>
              <i class="icon bi bi-circle-fill" />
              {slot}
            </a>
          </li>
        ))}
      </ul>
    </li>
  ) : (
    <li>
      <a
        class:list={["app-menu__item", { active: isActive }]}
        href={Astro.props.href}
      >
        <i class:list={["app-menu__icon", Astro.props.iconClasses]} />
        <span class="app-menu__label">
          <slot />
        </span>
      </a>
    </li>
  )
}
